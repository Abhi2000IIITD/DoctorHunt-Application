{"ast":null,"code":"var _jsxFileName = \"/home/abhishek-singh/Desktop/DoctorHunt/frontend/src/Pages/AvailabilityEntry.js\";\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\"; // Import Axios for API calls\n// import \"./AvailabilityEntry.css\"; // Ensure you have the CSS file for styling\n\n// const AvailabilityEntry = () => {\n//   const [doctorId, setDoctorId] = useState(\"\"); // New state for doctor_id input\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [startTime, setStartTime] = useState(\"\");\n//   const [availableSlots, setAvailableSlots] = useState(10);\n//   const [availableDate, setAvailableDate] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Validate doctorId to make sure it's provided\n//     if (!doctorId) {\n//       alert(\"Please enter your Doctor ID\");\n//       return;\n//     }\n\n//     // Prepare the data to be sent to the backend\n//     const availabilityData = {\n//       doctor_id: doctorId, // Use the input from the doctor\n//       location_name: locationName,\n//       address,\n//       available_date: availableDate,\n//       start_time: startTime,\n//       available_slots: availableSlots,\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://34.45.68.234/api/doctors/availability\",  // Replaced with the external IP\n//         availabilityData\n//       );\n//       if (response.data.success) {\n//         alert(\"Availability successfully added!\");\n//         setDoctorId(\"\");\n//         setLocationName(\"\");\n//         setAddress(\"\");\n//         setStartTime(\"\");\n//         setAvailableSlots(10);\n//         setAvailableDate(\"\");\n//         window.location.reload();\n//       } else {\n//         alert(response.data.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error saving availability\", error);\n//       alert(\"Something went wrong! Please try again.\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     navigate(\"/\"); // Navigate to the home page\n//   };\n\n//   const handleCheckBookings = () => {\n//     navigate(\"/check-bookings\"); \n//   };\n\n//   return (\n//     <div className=\"availability-entry-container\">\n//       <div className=\"availability-box\">\n//         <h2>Set Your Availability</h2>\n//         <form onSubmit={handleSubmit}>\n//           {/* Doctor ID Input */}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Doctor ID\"\n//             value={doctorId}\n//             onChange={(e) => setDoctorId(e.target.value)}\n//             required\n//           />\n\n//           {/* Location Name Dropdown */}\n//           <select\n//             value={locationName}\n//             onChange={(e) => setLocationName(e.target.value)}\n//             required\n//           >\n//             <option value=\"\">Select Metro Station</option>\n//             <option value=\"Kashmere Gate\">Kashmere Gate</option>\n//             <option value=\"Lal Quila\">Lal Quila</option>\n//             <option value=\"Jama Masjid\">Jama Masjid</option>\n//             <option value=\"Delhi Gate\">Delhi Gate</option>\n//             <option value=\"ITO\">ITO</option>\n//             <option value=\"Mandi House\">Mandi House</option>\n//             <option value=\"Janpath\">Janpath</option>\n//             <option value=\"Central Secretariat\">Central Secretariat</option>\n//             <option value=\"Khan Market\">Khan Market</option>\n//             <option value=\"Jawaharlal Nehru Stadium\">Jawaharlal Nehru Stadium</option>\n//             <option value=\"Jangpura\">Jangpura</option>\n//             <option value=\"Lajpat Nagar\">Lajpat Nagar</option>\n//             <option value=\"Moolchand\">Moolchand</option>\n//             <option value=\"Kailash Colony\">Kailash Colony</option>\n//             <option value=\"Nehru Place\">Nehru Place</option>\n//             <option value=\"Kalkaji Mandir\">Kalkaji Mandir</option>\n//             <option value=\"Govind Puri\">Govind Puri</option>\n//             <option value=\"Okhla\">Okhla</option>\n//             <option value=\"Jasola\">Jasola</option>\n//             <option value=\"Sarita Vihar\">Sarita Vihar</option>\n//             <option value=\"Mohan Estate\">Mohan Estate</option>\n//             <option value=\"Tughlakabad\">Tughlakabad</option>\n//             <option value=\"Badarpur Border\">Badarpur Border</option>\n//             <option value=\"Sarai\">Sarai</option>\n//             <option value=\"N.H.P.C. Chowk\">N.H.P.C. Chowk</option>\n//           </select>\n\n//           {/* Other form fields */}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter the address\"\n//             value={address}\n//             onChange={(e) => setAddress(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"date\"\n//             placeholder=\"Available Date\"\n//             value={availableDate}\n//             onChange={(e) => setAvailableDate(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"time\"\n//             placeholder=\"Start Time\"\n//             value={startTime}\n//             onChange={(e) => setStartTime(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"number\"\n//             placeholder=\"Available Slots\"\n//             value={availableSlots}\n//             onChange={(e) => setAvailableSlots(e.target.value)}\n//             min=\"1\"\n//             max=\"20\"\n//             required\n//           />\n//           <button type=\"submit\">Save Availability</button>\n//         </form>\n\n//         {/* Add space between buttons */}\n//         <div style={{ margin: \"20px 0\" }}></div>\n\n//         {/* Logout Button */}\n//         <button\n//           onClick={handleLogout}\n//           style={{\n//             padding: \"10px\",\n//             backgroundColor: \"#f44336\", // Red color for logout button\n//             color: \"white\",\n//             border: \"none\",\n//             borderRadius: \"5px\",\n//             fontSize: \"16px\",\n//             cursor: \"pointer\",\n//             width: \"100%\",\n//           }}\n//         >\n//           Logout\n//         </button>\n\n//         {/* Check Bookings Link */}\n//         <button\n//           onClick={handleCheckBookings}\n//           style={{\n//             marginTop: \"10px\",\n//             padding: \"10px\",\n//             backgroundColor: \"#007bff\", // Blue color for Check Bookings button\n//             color: \"white\",\n//             border: \"none\",\n//             borderRadius: \"5px\",\n//             fontSize: \"16px\",\n//             cursor: \"pointer\",\n//             width: \"100%\",\n//           }}\n//         >\n//           Check Bookings\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AvailabilityEntry;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios for API calls\nimport \"./AvailabilityEntry.css\"; // Ensure you have the CSS file for styling\n\nconst AvailabilityEntry = () => {\n  const [doctorId, setDoctorId] = useState(\"\"); // New state for doctor_id input\n  const [locationName, setLocationName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState(10);\n  const [availableDate, setAvailableDate] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate doctorId to make sure it's provided\n    if (!doctorId) {\n      alert(\"Please enter your Doctor ID\");\n      return;\n    }\n\n    // Prepare the data to be sent to the backend\n    const availabilityData = {\n      doctor_id: doctorId,\n      // Use the input from the doctor\n      location_name: locationName,\n      address,\n      available_date: availableDate,\n      start_time: startTime,\n      available_slots: availableSlots\n    };\n    try {\n      const response = await axios.post(\"http://34.45.68.234/api/doctors/availability\",\n      // Correct external IP for the location microservice\n      availabilityData);\n      if (response.data.success) {\n        alert(\"Availability successfully added!\");\n        // Reset form fields manually after successful submission\n        setDoctorId(\"\");\n        setLocationName(\"\");\n        setAddress(\"\");\n        setStartTime(\"\");\n        setAvailableSlots(10);\n        setAvailableDate(\"\");\n      } else {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"Error saving availability\", error);\n      alert(\"Something went wrong! Please try again.\");\n    }\n  };\n  const handleLogout = () => {\n    navigate(\"/\"); // Navigate to the home page\n  };\n  const handleCheckBookings = () => {\n    navigate(\"/check-bookings\"); // Navigate to CheckBookings page\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"availability-entry-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"availability-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, \"Set Your Availability\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Doctor ID\",\n    value: doctorId,\n    onChange: e => setDoctorId(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: locationName,\n    onChange: e => setLocationName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Select Metro Station\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Kashmere Gate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, \"Kashmere Gate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Lal Quila\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, \"Lal Quila\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Jama Masjid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"Jama Masjid\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Delhi Gate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, \"Delhi Gate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ITO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"ITO\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mandi House\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, \"Mandi House\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Janpath\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Janpath\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Central Secretariat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"Central Secretariat\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Khan Market\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \"Khan Market\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Jawaharlal Nehru Stadium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Jawaharlal Nehru Stadium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Jangpura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, \"Jangpura\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Lajpat Nagar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Lajpat Nagar\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Moolchand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, \"Moolchand\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Kailash Colony\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, \"Kailash Colony\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Nehru Place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, \"Nehru Place\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Kalkaji Mandir\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, \"Kalkaji Mandir\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Govind Puri\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, \"Govind Puri\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Okhla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Okhla\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Jasola\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"Jasola\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Sarita Vihar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Sarita Vihar\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mohan Estate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"Mohan Estate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tughlakabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Tughlakabad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Badarpur Border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"Badarpur Border\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Sarai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, \"Sarai\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"N.H.P.C. Chowk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"N.H.P.C. Chowk\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Available Date\",\n    value: availableDate,\n    onChange: e => setAvailableDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    placeholder: \"Start Time\",\n    value: startTime,\n    onChange: e => setStartTime(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Available Slots\",\n    value: availableSlots,\n    onChange: e => setAvailableSlots(e.target.value),\n    min: \"1\",\n    max: \"20\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, \"Save Availability\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    style: {\n      padding: \"10px\",\n      backgroundColor: \"#f44336\",\n      // Red color for logout button\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      fontSize: \"16px\",\n      cursor: \"pointer\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCheckBookings,\n    style: {\n      marginTop: \"10px\",\n      padding: \"10px\",\n      backgroundColor: \"#007bff\",\n      // Blue color for Check Bookings button\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      fontSize: \"16px\",\n      cursor: \"pointer\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }, \"Check Bookings\")));\n};\nexport default AvailabilityEntry;","map":{"version":3,"names":["React","useState","useNavigate","axios","AvailabilityEntry","doctorId","setDoctorId","locationName","setLocationName","address","setAddress","startTime","setStartTime","availableSlots","setAvailableSlots","availableDate","setAvailableDate","navigate","handleSubmit","e","preventDefault","alert","availabilityData","doctor_id","location_name","available_date","start_time","available_slots","response","post","data","success","message","error","console","handleLogout","handleCheckBookings","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","min","max","style","margin","onClick","padding","backgroundColor","color","border","borderRadius","fontSize","cursor","width","marginTop"],"sources":["/home/abhishek-singh/Desktop/DoctorHunt/frontend/src/Pages/AvailabilityEntry.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\"; // Import Axios for API calls\n// import \"./AvailabilityEntry.css\"; // Ensure you have the CSS file for styling\n\n// const AvailabilityEntry = () => {\n//   const [doctorId, setDoctorId] = useState(\"\"); // New state for doctor_id input\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [startTime, setStartTime] = useState(\"\");\n//   const [availableSlots, setAvailableSlots] = useState(10);\n//   const [availableDate, setAvailableDate] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Validate doctorId to make sure it's provided\n//     if (!doctorId) {\n//       alert(\"Please enter your Doctor ID\");\n//       return;\n//     }\n\n//     // Prepare the data to be sent to the backend\n//     const availabilityData = {\n//       doctor_id: doctorId, // Use the input from the doctor\n//       location_name: locationName,\n//       address,\n//       available_date: availableDate,\n//       start_time: startTime,\n//       available_slots: availableSlots,\n//     };\n\n\n//     try {\n//       const response = await axios.post(\n//         \"http://34.45.68.234/api/doctors/availability\",  // Replaced with the external IP\n//         availabilityData\n//       );\n//       if (response.data.success) {\n//         alert(\"Availability successfully added!\");\n//         setDoctorId(\"\");\n//         setLocationName(\"\");\n//         setAddress(\"\");\n//         setStartTime(\"\");\n//         setAvailableSlots(10);\n//         setAvailableDate(\"\");\n//         window.location.reload();\n//       } else {\n//         alert(response.data.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error saving availability\", error);\n//       alert(\"Something went wrong! Please try again.\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     navigate(\"/\"); // Navigate to the home page\n//   };\n\n//   const handleCheckBookings = () => {\n//     navigate(\"/check-bookings\"); \n//   };\n\n//   return (\n//     <div className=\"availability-entry-container\">\n//       <div className=\"availability-box\">\n//         <h2>Set Your Availability</h2>\n//         <form onSubmit={handleSubmit}>\n//           {/* Doctor ID Input */}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Doctor ID\"\n//             value={doctorId}\n//             onChange={(e) => setDoctorId(e.target.value)}\n//             required\n//           />\n\n//           {/* Location Name Dropdown */}\n//           <select\n//             value={locationName}\n//             onChange={(e) => setLocationName(e.target.value)}\n//             required\n//           >\n//             <option value=\"\">Select Metro Station</option>\n//             <option value=\"Kashmere Gate\">Kashmere Gate</option>\n//             <option value=\"Lal Quila\">Lal Quila</option>\n//             <option value=\"Jama Masjid\">Jama Masjid</option>\n//             <option value=\"Delhi Gate\">Delhi Gate</option>\n//             <option value=\"ITO\">ITO</option>\n//             <option value=\"Mandi House\">Mandi House</option>\n//             <option value=\"Janpath\">Janpath</option>\n//             <option value=\"Central Secretariat\">Central Secretariat</option>\n//             <option value=\"Khan Market\">Khan Market</option>\n//             <option value=\"Jawaharlal Nehru Stadium\">Jawaharlal Nehru Stadium</option>\n//             <option value=\"Jangpura\">Jangpura</option>\n//             <option value=\"Lajpat Nagar\">Lajpat Nagar</option>\n//             <option value=\"Moolchand\">Moolchand</option>\n//             <option value=\"Kailash Colony\">Kailash Colony</option>\n//             <option value=\"Nehru Place\">Nehru Place</option>\n//             <option value=\"Kalkaji Mandir\">Kalkaji Mandir</option>\n//             <option value=\"Govind Puri\">Govind Puri</option>\n//             <option value=\"Okhla\">Okhla</option>\n//             <option value=\"Jasola\">Jasola</option>\n//             <option value=\"Sarita Vihar\">Sarita Vihar</option>\n//             <option value=\"Mohan Estate\">Mohan Estate</option>\n//             <option value=\"Tughlakabad\">Tughlakabad</option>\n//             <option value=\"Badarpur Border\">Badarpur Border</option>\n//             <option value=\"Sarai\">Sarai</option>\n//             <option value=\"N.H.P.C. Chowk\">N.H.P.C. Chowk</option>\n//           </select>\n        \n//           {/* Other form fields */}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter the address\"\n//             value={address}\n//             onChange={(e) => setAddress(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"date\"\n//             placeholder=\"Available Date\"\n//             value={availableDate}\n//             onChange={(e) => setAvailableDate(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"time\"\n//             placeholder=\"Start Time\"\n//             value={startTime}\n//             onChange={(e) => setStartTime(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"number\"\n//             placeholder=\"Available Slots\"\n//             value={availableSlots}\n//             onChange={(e) => setAvailableSlots(e.target.value)}\n//             min=\"1\"\n//             max=\"20\"\n//             required\n//           />\n//           <button type=\"submit\">Save Availability</button>\n//         </form>\n\n//         {/* Add space between buttons */}\n//         <div style={{ margin: \"20px 0\" }}></div>\n\n//         {/* Logout Button */}\n//         <button\n//           onClick={handleLogout}\n//           style={{\n//             padding: \"10px\",\n//             backgroundColor: \"#f44336\", // Red color for logout button\n//             color: \"white\",\n//             border: \"none\",\n//             borderRadius: \"5px\",\n//             fontSize: \"16px\",\n//             cursor: \"pointer\",\n//             width: \"100%\",\n//           }}\n//         >\n//           Logout\n//         </button>\n\n//         {/* Check Bookings Link */}\n//         <button\n//           onClick={handleCheckBookings}\n//           style={{\n//             marginTop: \"10px\",\n//             padding: \"10px\",\n//             backgroundColor: \"#007bff\", // Blue color for Check Bookings button\n//             color: \"white\",\n//             border: \"none\",\n//             borderRadius: \"5px\",\n//             fontSize: \"16px\",\n//             cursor: \"pointer\",\n//             width: \"100%\",\n//           }}\n//         >\n//           Check Bookings\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AvailabilityEntry;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios for API calls\nimport \"./AvailabilityEntry.css\"; // Ensure you have the CSS file for styling\n\nconst AvailabilityEntry = () => {\n  const [doctorId, setDoctorId] = useState(\"\"); // New state for doctor_id input\n  const [locationName, setLocationName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState(10);\n  const [availableDate, setAvailableDate] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate doctorId to make sure it's provided\n    if (!doctorId) {\n      alert(\"Please enter your Doctor ID\");\n      return;\n    }\n\n    // Prepare the data to be sent to the backend\n    const availabilityData = {\n      doctor_id: doctorId, // Use the input from the doctor\n      location_name: locationName,\n      address,\n      available_date: availableDate,\n      start_time: startTime,\n      available_slots: availableSlots,\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://34.45.68.234/api/doctors/availability\",  // Correct external IP for the location microservice\n        availabilityData\n      );\n      if (response.data.success) {\n        alert(\"Availability successfully added!\");\n        // Reset form fields manually after successful submission\n        setDoctorId(\"\");\n        setLocationName(\"\");\n        setAddress(\"\");\n        setStartTime(\"\");\n        setAvailableSlots(10);\n        setAvailableDate(\"\");\n      } else {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"Error saving availability\", error);\n      alert(\"Something went wrong! Please try again.\");\n    }\n  };\n\n  const handleLogout = () => {\n    navigate(\"/\"); // Navigate to the home page\n  };\n\n  const handleCheckBookings = () => {\n    navigate(\"/check-bookings\"); // Navigate to CheckBookings page\n  };\n\n  return (\n    <div className=\"availability-entry-container\">\n      <div className=\"availability-box\">\n        <h2>Set Your Availability</h2>\n        <form onSubmit={handleSubmit}>\n          {/* Doctor ID Input */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter Doctor ID\"\n            value={doctorId}\n            onChange={(e) => setDoctorId(e.target.value)}\n            required\n          />\n\n          {/* Location Name Dropdown */}\n          <select\n            value={locationName}\n            onChange={(e) => setLocationName(e.target.value)}\n            required\n          >\n            <option value=\"\">Select Metro Station</option>\n            <option value=\"Kashmere Gate\">Kashmere Gate</option>\n            <option value=\"Lal Quila\">Lal Quila</option>\n            <option value=\"Jama Masjid\">Jama Masjid</option>\n            <option value=\"Delhi Gate\">Delhi Gate</option>\n            <option value=\"ITO\">ITO</option>\n            <option value=\"Mandi House\">Mandi House</option>\n            <option value=\"Janpath\">Janpath</option>\n            <option value=\"Central Secretariat\">Central Secretariat</option>\n            <option value=\"Khan Market\">Khan Market</option>\n            <option value=\"Jawaharlal Nehru Stadium\">Jawaharlal Nehru Stadium</option>\n            <option value=\"Jangpura\">Jangpura</option>\n            <option value=\"Lajpat Nagar\">Lajpat Nagar</option>\n            <option value=\"Moolchand\">Moolchand</option>\n            <option value=\"Kailash Colony\">Kailash Colony</option>\n            <option value=\"Nehru Place\">Nehru Place</option>\n            <option value=\"Kalkaji Mandir\">Kalkaji Mandir</option>\n            <option value=\"Govind Puri\">Govind Puri</option>\n            <option value=\"Okhla\">Okhla</option>\n            <option value=\"Jasola\">Jasola</option>\n            <option value=\"Sarita Vihar\">Sarita Vihar</option>\n            <option value=\"Mohan Estate\">Mohan Estate</option>\n            <option value=\"Tughlakabad\">Tughlakabad</option>\n            <option value=\"Badarpur Border\">Badarpur Border</option>\n            <option value=\"Sarai\">Sarai</option>\n            <option value=\"N.H.P.C. Chowk\">N.H.P.C. Chowk</option>\n          </select>\n        \n          {/* Other form fields */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter the address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          />\n          <input\n            type=\"date\"\n            placeholder=\"Available Date\"\n            value={availableDate}\n            onChange={(e) => setAvailableDate(e.target.value)}\n            required\n          />\n          <input\n            type=\"time\"\n            placeholder=\"Start Time\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n            required\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Available Slots\"\n            value={availableSlots}\n            onChange={(e) => setAvailableSlots(e.target.value)}\n            min=\"1\"\n            max=\"20\"\n            required\n          />\n          <button type=\"submit\">Save Availability</button>\n        </form>\n\n        {/* Add space between buttons */}\n        <div style={{ margin: \"20px 0\" }}></div>\n\n        {/* Logout Button */}\n        <button\n          onClick={handleLogout}\n          style={{\n            padding: \"10px\",\n            backgroundColor: \"#f44336\", // Red color for logout button\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            fontSize: \"16px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Logout\n        </button>\n\n        {/* Check Bookings Link */}\n        <button\n          onClick={handleCheckBookings}\n          style={{\n            marginTop: \"10px\",\n            padding: \"10px\",\n            backgroundColor: \"#007bff\", // Blue color for Check Bookings button\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            fontSize: \"16px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Check Bookings\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AvailabilityEntry;\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,yBAAyB,CAAC,CAAC;;AAElC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACf,QAAQ,EAAE;MACbgB,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;;IAEA;IACA,MAAMC,gBAAgB,GAAG;MACvBC,SAAS,EAAElB,QAAQ;MAAE;MACrBmB,aAAa,EAAEjB,YAAY;MAC3BE,OAAO;MACPgB,cAAc,EAAEV,aAAa;MAC7BW,UAAU,EAAEf,SAAS;MACrBgB,eAAe,EAAEd;IACnB,CAAC;IAED,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAC/B,8CAA8C;MAAG;MACjDP,gBACF,CAAC;MACD,IAAIM,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBV,KAAK,CAAC,kCAAkC,CAAC;QACzC;QACAf,WAAW,CAAC,EAAE,CAAC;QACfE,eAAe,CAAC,EAAE,CAAC;QACnBE,UAAU,CAAC,EAAE,CAAC;QACdE,YAAY,CAAC,EAAE,CAAC;QAChBE,iBAAiB,CAAC,EAAE,CAAC;QACrBE,gBAAgB,CAAC,EAAE,CAAC;MACtB,CAAC,MAAM;QACLK,KAAK,CAACO,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDZ,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBlB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAMmB,mBAAmB,GAAGA,CAAA,KAAM;IAChCnB,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEjB,KAAA,CAAAqC,aAAA;IAAKC,SAAS,EAAC,8BAA8B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3C5C,KAAA,CAAAqC,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/B5C,KAAA,CAAAqC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,eAC9B5C,KAAA,CAAAqC,aAAA;IAAMQ,QAAQ,EAAE3B,YAAa;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3B5C,KAAA,CAAAqC,aAAA;IACES,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,iBAAiB;IAC7BC,KAAK,EAAE3C,QAAS;IAChB4C,QAAQ,EAAG9B,CAAC,IAAKb,WAAW,CAACa,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;IAC7CG,QAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eAGF5C,KAAA,CAAAqC,aAAA;IACEW,KAAK,EAAEzC,YAAa;IACpB0C,QAAQ,EAAG9B,CAAC,IAAKX,eAAe,CAACW,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;IACjDG,QAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAER5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,EAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sBAA4B,CAAC,eAC9C5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,eAAe;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAqB,CAAC,eACpD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,WAAW;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eAC5C5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,eAChD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,YAAY;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CAAC,eAC9C5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,KAAK;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CAAC,eAChC5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,eAChD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,SAAS;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,eACxC5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,qBAAqB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAA2B,CAAC,eAChE5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,eAChD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,0BAA0B;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0BAAgC,CAAC,eAC1E5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,UAAU;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAAC,eAC1C5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,cAAc;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAoB,CAAC,eAClD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,WAAW;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eAC5C5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,gBAAgB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAsB,CAAC,eACtD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,eAChD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,gBAAgB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAsB,CAAC,eACtD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,eAChD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,OAAO;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CAAC,eACpC5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,QAAQ;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CAAC,eACtC5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,cAAc;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAoB,CAAC,eAClD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,cAAc;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAoB,CAAC,eAClD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,eAChD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,iBAAiB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAuB,CAAC,eACxD5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,OAAO;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CAAC,eACpC5C,KAAA,CAAAqC,aAAA;IAAQW,KAAK,EAAC,gBAAgB;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAsB,CAC/C,CAAC,eAGT5C,KAAA,CAAAqC,aAAA;IACES,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,mBAAmB;IAC/BC,KAAK,EAAEvC,OAAQ;IACfwC,QAAQ,EAAG9B,CAAC,IAAKT,UAAU,CAACS,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;IAC5CG,QAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF5C,KAAA,CAAAqC,aAAA;IACES,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,gBAAgB;IAC5BC,KAAK,EAAEjC,aAAc;IACrBkC,QAAQ,EAAG9B,CAAC,IAAKH,gBAAgB,CAACG,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;IAClDG,QAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF5C,KAAA,CAAAqC,aAAA;IACES,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,YAAY;IACxBC,KAAK,EAAErC,SAAU;IACjBsC,QAAQ,EAAG9B,CAAC,IAAKP,YAAY,CAACO,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;IAC9CG,QAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF5C,KAAA,CAAAqC,aAAA;IACES,IAAI,EAAC,QAAQ;IACbC,WAAW,EAAC,iBAAiB;IAC7BC,KAAK,EAAEnC,cAAe;IACtBoC,QAAQ,EAAG9B,CAAC,IAAKL,iBAAiB,CAACK,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;IACnDI,GAAG,EAAC,GAAG;IACPC,GAAG,EAAC,IAAI;IACRF,QAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF5C,KAAA,CAAAqC,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAyB,CAC3C,CAAC,eAGP5C,KAAA,CAAAqC,aAAA;IAAKiB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eAGxC5C,KAAA,CAAAqC,aAAA;IACEmB,OAAO,EAAErB,YAAa;IACtBmB,KAAK,EAAE;MACLG,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,SAAS;MAAE;MAC5BC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE;IACT,CAAE;IAAAzB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,QAEO,CAAC,eAGT5C,KAAA,CAAAqC,aAAA;IACEmB,OAAO,EAAEpB,mBAAoB;IAC7BkB,KAAK,EAAE;MACLW,SAAS,EAAE,MAAM;MACjBR,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,SAAS;MAAE;MAC5BC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE;IACT,CAAE;IAAAzB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,gBAEO,CACL,CACF,CAAC;AAEV,CAAC;AAED,eAAexC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}